async function initSPA(){new MutationObserver(t=>{for(const e of t)updateElementsBase()}).observe(document.body,{childList:!0,attributes:!0,subtree:!0})}async function updateElementsBase(){var t=document.querySelectorAll("[click]"),e=document.querySelectorAll("[enter]"),n=document.querySelectorAll("[leave]");t.forEach(t=>{const e=t.getAttribute("to");e&&(t.addEventListener("click",()=>{setSPAContent(e)}),t.removeAttribute("to"),t.removeAttribute("click"))}),e.forEach(t=>{const e=t.getAttribute("to");e&&t.addEventListener("mouseenter",()=>{setSPAContent(e)})}),n.forEach(t=>{const e=t.getAttribute("to");e&&t.addEventListener("mouseleave",()=>{setSPAContent(e)})})}async function reloadScripts(){const t=document.querySelectorAll("script[src]");for(const e of t){const t=e.src,n=await fetch(t,{mode:"no-cors"});if(n.ok){const t=await n.text(),o=document.createElement("script");o.textContent=t,e.parentNode.replaceChild(o,e)}else console.error("Fa1iled to load script:",t)}}async function setSPAContent(t){let e=await fetch(t);var n="";e.ok&&(n=await e.text(),newhtml=document.createElement("html"),newhtml.innerHTML=n,document.documentElement.replaceWith(newhtml),window.history.pushState({},t.split(window.origin),t),updateElementsBase(),reloadScripts())}export{initSPA};
